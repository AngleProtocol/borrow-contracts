name: Security analysis

on: [workflow_dispatch]

defaults:
  run:
    shell: bash

jobs:
  slither:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - run: |
          python -m pip install --upgrade pip
          pip3 install slither-analyzer solc-select
          solc-select install 0.6.11
          solc-select use 0.6.11
      - run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: |
          slither . --ignore-compile --filter-paths "node_modules" --disable-color --print human-summary > slither-audit.txt 2>&1

          echo "##vso[task.setvariable variable=slitherAuditRun]yes";

          export LError=$(grep 'low issues' slither-audit.txt | sed 's/[a-zA-Z:0 ]//g')
          export MError=$(grep 'medium issues' slither-audit.txt | sed 's/[a-zA-Z:0 ]//g')
          export HError=$(grep 'high issues' slither-audit.txt | sed 's/[a-zA-Z:0 ]//g')

          echo -en '-------------------------------\n\n\n# Details:\n##############################\n\n' >> slither-audit.txt
          slither . --ignore-compile --filter-paths "node_modules" --disable-color >> slither-audit.txt 2>&1

          if [ ! -z "${LError}" ] || [ ! -z "${MError}" ] || [ ! -z "${HError}" ] ; then 
            echo "##vso[task.complete result=Failed;]Slither found a issue." ;
          fi

          echo "##vso[task.setvariable variable=slitherAudit]$(cat slither-audit.txt | sed ':a;N;$!ba;s/\n/%0D%0A/g')"
      # slither . --filter-paths contracts/mock
