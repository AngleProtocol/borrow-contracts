{
  "address": "0x03C2d2014795EE8cA78B62738433B457AB19F4b3",
  "abi": [
    {
      "inputs": [],
      "name": "SubcallFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "canFail",
              "type": "bool"
            }
          ],
          "internalType": "struct MultiCallWithFailure.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multiCall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd9f9c895481192cafdd913d6208e4122c6b6064bb8817633f4a861c888eb9c98",
  "receipt": {
    "to": null,
    "from": "0xfdA462548Ce04282f4B6D6619823a7C64Fdc0185",
    "contractAddress": "0x03C2d2014795EE8cA78B62738433B457AB19F4b3",
    "transactionIndex": 5,
    "gasUsed": "388805",
    "logsBloom": "0x
    "blockHash": "0xbf5401e7b04de40c18b9fcead11e1e558afacf4e5d613fdbcc94fa44c0661c4f",
    "transactionHash": "0xd9f9c895481192cafdd913d6208e4122c6b6064bb8817633f4a861c888eb9c98",
    "logs": [],
    "blockNumber": 23931769,
    "cumulativeGasUsed": "1389028",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c98f02fbcc60f7e5a0efa64d57cb0463",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SubcallFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"canFail\",\"type\":\"bool\"}],\"internalType\":\"struct MultiCallWithFailure.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multiCall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Angle Labs, Inc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MultiCallWithFailure\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Multicall contract allowing subcalls to fail without reverting the entire call\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/keeperMulticall/MulticallWithFailure.sol\":\"MultiCallWithFailure\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/keeperMulticall/MulticallWithFailure.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\n/// @title MultiCallWithFailure\\n/// @author Angle Labs, Inc.\\n/// @notice Multicall contract allowing subcalls to fail without reverting the entire call\\ncontract MultiCallWithFailure {\\n    error SubcallFailed();\\n\\n    struct Call {\\n        address target;\\n        bytes data;\\n        bool canFail;\\n    }\\n\\n    function multiCall(Call[] memory calls) external view returns (bytes[] memory) {\\n        bytes[] memory results = new bytes[](calls.length);\\n\\n        for (uint256 i; i < calls.length; ++i) {\\n            (bool success, bytes memory result) = calls[i].target.staticcall(calls[i].data);\\n            if (!calls[i].canFail) {\\n                if (!success) {\\n                    revert SubcallFailed();\\n                }\\n            }\\n            results[i] = result;\\n        }\\n\\n        return results;\\n    }\\n}\\n\",\"keccak256\":\"0x4420c7228b646869aec9b03d727153d3b9ac6a8e2d6a16b37fa09dd737aadd80\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610618806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806395871dd414610030575b600080fd5b61004361003e3660046102ad565b610059565b6040516100509190610481565b60405180910390f35b60606000825167ffffffffffffffff811115610077576100776101f1565b6040519080825280602002602001820160405280156100aa57816020015b60608152602001906001900390816100955790505b50905060005b83518110156101ea576000808583815181106100ce576100ce610537565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1686848151811061010257610102610537565b60200260200101516020015160405161011b9190610566565b600060405180830381855afa9150503d8060008114610156576040519150601f19603f3d011682016040523d82523d6000602084013e61015b565b606091505b509150915085838151811061017257610172610537565b6020026020010151604001516101b957816101b9576040517fb8e728da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808484815181106101cc576101cc610537565b60200260200101819052505050806101e390610582565b90506100b0565b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610243576102436101f1565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610290576102906101f1565b604052919050565b803580151581146102a857600080fd5b919050565b600060208083850312156102c057600080fd5b823567ffffffffffffffff808211156102d857600080fd5b818501915085601f8301126102ec57600080fd5b8135818111156102fe576102fe6101f1565b8060051b61030d858201610249565b918252838101850191858101908984111561032757600080fd5b86860192505b838310156104445782358581111561034457600080fd5b86017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06060828d038201121561037a5760008081fd5b610382610220565b8983013573ffffffffffffffffffffffffffffffffffffffff811681146103a95760008081fd5b8152604083810135898111156103bf5760008081fd5b8401603f81018f136103d15760008081fd5b8b8101358a8111156103e5576103e56101f1565b6103f58d86601f84011601610249565b94508085528f8382840101111561040c5760008081fd5b808383018e87013760008d82870101525050828b83015261042f60608501610298565b9082015284525050918601919086019061032d565b9998505050505050505050565b60005b8381101561046c578181015183820152602001610454565b8381111561047b576000848401525b50505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561052a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452815180518087526104ed818989018a8501610451565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016959095018601945092850192908501906001016104a8565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008251610578818460208701610451565b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105db577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220c5f494dac72147a818d439c8bc35d2cc71b4b10b9f34c527798abe0a5a6f9b1064736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806395871dd414610030575b600080fd5b61004361003e3660046102ad565b610059565b6040516100509190610481565b60405180910390f35b60606000825167ffffffffffffffff811115610077576100776101f1565b6040519080825280602002602001820160405280156100aa57816020015b60608152602001906001900390816100955790505b50905060005b83518110156101ea576000808583815181106100ce576100ce610537565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1686848151811061010257610102610537565b60200260200101516020015160405161011b9190610566565b600060405180830381855afa9150503d8060008114610156576040519150601f19603f3d011682016040523d82523d6000602084013e61015b565b606091505b509150915085838151811061017257610172610537565b6020026020010151604001516101b957816101b9576040517fb8e728da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808484815181106101cc576101cc610537565b60200260200101819052505050806101e390610582565b90506100b0565b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610243576102436101f1565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610290576102906101f1565b604052919050565b803580151581146102a857600080fd5b919050565b600060208083850312156102c057600080fd5b823567ffffffffffffffff808211156102d857600080fd5b818501915085601f8301126102ec57600080fd5b8135818111156102fe576102fe6101f1565b8060051b61030d858201610249565b918252838101850191858101908984111561032757600080fd5b86860192505b838310156104445782358581111561034457600080fd5b86017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06060828d038201121561037a5760008081fd5b610382610220565b8983013573ffffffffffffffffffffffffffffffffffffffff811681146103a95760008081fd5b8152604083810135898111156103bf5760008081fd5b8401603f81018f136103d15760008081fd5b8b8101358a8111156103e5576103e56101f1565b6103f58d86601f84011601610249565b94508085528f8382840101111561040c5760008081fd5b808383018e87013760008d82870101525050828b83015261042f60608501610298565b9082015284525050918601919086019061032d565b9998505050505050505050565b60005b8381101561046c578181015183820152602001610454565b8381111561047b576000848401525b50505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561052a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452815180518087526104ed818989018a8501610451565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016959095018601945092850192908501906001016104a8565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008251610578818460208701610451565b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105db577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220c5f494dac72147a818d439c8bc35d2cc71b4b10b9f34c527798abe0a5a6f9b1064736f6c634300080c0033",
  "devdoc": {
    "author": "Angle Labs, Inc.",
    "kind": "dev",
    "methods": {},
    "title": "MultiCallWithFailure",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Multicall contract allowing subcalls to fail without reverting the entire call",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}