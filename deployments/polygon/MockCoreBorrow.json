{
  "address": "0xE0c4Db05a515f2EcE758ab02e6cE4d1C30245752",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFlashAngle",
          "name": "flashAngle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "addStablecoinSupport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "flashLoaners",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "governors",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "guardians",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "isFlashLoanerTreasury",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "isGovernor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "isGovernorOrGuardian",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlashAngle",
          "name": "flashAngle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "removeStablecoinSupport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlashAngle",
          "name": "flashAngle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_core",
          "type": "address"
        }
      ],
      "name": "setCore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITreasury",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_flashLoanModule",
          "type": "address"
        }
      ],
      "name": "setFlashLoanModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "toggleFlashLoaners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "toggleGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "toggleGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1b742f58fa7ad69206fa1f3bd63637f6f9def2afa03485530add659813902fb1",
  "receipt": {
    "to": null,
    "from": "0xfdA462548Ce04282f4B6D6619823a7C64Fdc0185",
    "contractAddress": "0xE0c4Db05a515f2EcE758ab02e6cE4d1C30245752",
    "transactionIndex": 278,
    "gasUsed": "381025",
    "logsBloom": "0x
    "blockHash": "0x37dcdb3d8072438c6689ac01c0ace5bc10e43c6a5e9a4bc011abb982e512460a",
    "transactionHash": "0x1b742f58fa7ad69206fa1f3bd63637f6f9def2afa03485530add659813902fb1",
    "logs": [
      {
        "transactionIndex": 278,
        "blockNumber": 51305648,
        "transactionHash": "0x1b742f58fa7ad69206fa1f3bd63637f6f9def2afa03485530add659813902fb1",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000fda462548ce04282f4b6d6619823a7c64fdc0185",
          "0x0000000000000000000000007c7379531b2aee82e4ca06d4175d13b9cbeafd49"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000225888d0cc87c30000000000000000000000000000000000000000000000042b3a8ffd1cda99cd000000000000000000000000000000000000000000029f137c671743d5600c9f0000000000000000000000000000000000000000000000042b1837744c0e120a000000000000000000000000000000000000000000029f137c896fcca62c9462",
        "logIndex": 936,
        "blockHash": "0x37dcdb3d8072438c6689ac01c0ace5bc10e43c6a5e9a4bc011abb982e512460a"
      }
    ],
    "blockNumber": 51305648,
    "cumulativeGasUsed": "29192909",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6f4425f71fc851428aa4b6d27ae33edb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFlashAngle\",\"name\":\"flashAngle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"addStablecoinSupport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"flashLoaners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"governors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"guardians\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"isFlashLoanerTreasury\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isGovernorOrGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashAngle\",\"name\":\"flashAngle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"removeStablecoinSupport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashAngle\",\"name\":\"flashAngle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_core\",\"type\":\"address\"}],\"name\":\"setCore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_flashLoanModule\",\"type\":\"address\"}],\"name\":\"setFlashLoanModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"toggleFlashLoaners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"toggleGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"toggleGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isFlashLoanerTreasury(address)\":{\"params\":{\"treasury\":\"Address to check\"},\"returns\":{\"_0\":\"Whether the address has the `FLASHLOANER_TREASURY_ROLE` or not\"}},\"isGovernor(address)\":{\"params\":{\"admin\":\"Address to check\"},\"returns\":{\"_0\":\"Whether the address has the `GOVERNOR_ROLE` or not\"}},\"isGovernorOrGuardian(address)\":{\"details\":\"Governance should make sure when adding a governor to also give this governor the guardian role by calling the `addGovernor` function\",\"params\":{\"admin\":\"Address to check\"},\"returns\":{\"_0\":\"Whether the address has the `GUARDIAN_ROLE` or not\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isFlashLoanerTreasury(address)\":{\"notice\":\"Checks if an address corresponds to a treasury of a stablecoin with a flash loan module initialized on it\"},\"isGovernor(address)\":{\"notice\":\"Checks whether an address is governor of the Angle Protocol or not\"},\"isGovernorOrGuardian(address)\":{\"notice\":\"Checks whether an address is governor or a guardian of the Angle Protocol or not\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockCoreBorrow.sol\":\"MockCoreBorrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"contracts/interfaces/IAgToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\n\\n/// @title IAgToken\\n/// @author Angle Labs, Inc.\\n/// @notice Interface for the stablecoins `AgToken` contracts\\n/// @dev This interface only contains functions of the `AgToken` contract which are called by other contracts\\n/// of this module or of the first module of the Angle Protocol\\ninterface IAgToken is IERC20Upgradeable {\\n    // ======================= Minter Role Only Functions ===========================\\n\\n    /// @notice Lets the `StableMaster` contract or another whitelisted contract mint agTokens\\n    /// @param account Address to mint to\\n    /// @param amount Amount to mint\\n    /// @dev The contracts allowed to issue agTokens are the `StableMaster` contract, `VaultManager` contracts\\n    /// associated to this stablecoin as well as the flash loan module (if activated) and potentially contracts\\n    /// whitelisted by governance\\n    function mint(address account, uint256 amount) external;\\n\\n    /// @notice Burns `amount` tokens from a `burner` address after being asked to by `sender`\\n    /// @param amount Amount of tokens to burn\\n    /// @param burner Address to burn from\\n    /// @param sender Address which requested the burn from `burner`\\n    /// @dev This method is to be called by a contract with the minter right after being requested\\n    /// to do so by a `sender` address willing to burn tokens from another `burner` address\\n    /// @dev The method checks the allowance between the `sender` and the `burner`\\n    function burnFrom(uint256 amount, address burner, address sender) external;\\n\\n    /// @notice Burns `amount` tokens from a `burner` address\\n    /// @param amount Amount of tokens to burn\\n    /// @param burner Address to burn from\\n    /// @dev This method is to be called by a contract with a minter right on the AgToken after being\\n    /// requested to do so by an address willing to burn tokens from its address\\n    function burnSelf(uint256 amount, address burner) external;\\n\\n    // ========================= Treasury Only Functions ===========================\\n\\n    /// @notice Adds a minter in the contract\\n    /// @param minter Minter address to add\\n    /// @dev Zero address checks are performed directly in the `Treasury` contract\\n    function addMinter(address minter) external;\\n\\n    /// @notice Removes a minter from the contract\\n    /// @param minter Minter address to remove\\n    /// @dev This function can also be called by a minter wishing to revoke itself\\n    function removeMinter(address minter) external;\\n\\n    /// @notice Sets a new treasury contract\\n    /// @param _treasury New treasury address\\n    function setTreasury(address _treasury) external;\\n\\n    // ========================= External functions ================================\\n\\n    /// @notice Checks whether an address has the right to mint agTokens\\n    /// @param minter Address for which the minting right should be checked\\n    /// @return Whether the address has the right to mint agTokens or not\\n    function isMinter(address minter) external view returns (bool);\\n\\n    /// @notice Get the associated treasury\\n    function treasury() external view returns (address);\\n}\\n\",\"keccak256\":\"0x0c83efcfc1fb9ae9ba830f7b89e3dab9abf6ad7a6205a31aa35fbccaa837dcdc\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ICoreBorrow.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.12;\\n\\n/// @title ICoreBorrow\\n/// @author Angle Labs, Inc.\\n/// @notice Interface for the `CoreBorrow` contract\\n/// @dev This interface only contains functions of the `CoreBorrow` contract which are called by other contracts\\n/// of this module\\ninterface ICoreBorrow {\\n    /// @notice Checks if an address corresponds to a treasury of a stablecoin with a flash loan\\n    /// module initialized on it\\n    /// @param treasury Address to check\\n    /// @return Whether the address has the `FLASHLOANER_TREASURY_ROLE` or not\\n    function isFlashLoanerTreasury(address treasury) external view returns (bool);\\n\\n    /// @notice Checks whether an address is governor of the Angle Protocol or not\\n    /// @param admin Address to check\\n    /// @return Whether the address has the `GOVERNOR_ROLE` or not\\n    function isGovernor(address admin) external view returns (bool);\\n\\n    /// @notice Checks whether an address is governor or a guardian of the Angle Protocol or not\\n    /// @param admin Address to check\\n    /// @return Whether the address has the `GUARDIAN_ROLE` or not\\n    /// @dev Governance should make sure when adding a governor to also give this governor the guardian\\n    /// role by calling the `addGovernor` function\\n    function isGovernorOrGuardian(address admin) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x10249210cbf522775f040baf981d7d037472168ce2746d87473ac7c29a34e62e\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IFlashAngle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"./IAgToken.sol\\\";\\nimport \\\"./ICoreBorrow.sol\\\";\\n\\n/// @title IFlashAngle\\n/// @author Angle Labs, Inc.\\n/// @notice Interface for the `FlashAngle` contract\\n/// @dev This interface only contains functions of the contract which are called by other contracts\\n/// of this module\\ninterface IFlashAngle {\\n    /// @notice Reference to the `CoreBorrow` contract managing the FlashLoan module\\n    function core() external view returns (ICoreBorrow);\\n\\n    /// @notice Sends the fees taken from flash loans to the treasury contract associated to the stablecoin\\n    /// @param stablecoin Stablecoin from which profits should be sent\\n    /// @return balance Amount of profits sent\\n    /// @dev This function can only be called by the treasury contract\\n    function accrueInterestToTreasury(IAgToken stablecoin) external returns (uint256 balance);\\n\\n    /// @notice Adds support for a stablecoin\\n    /// @param _treasury Treasury associated to the stablecoin to add support for\\n    /// @dev This function can only be called by the `CoreBorrow` contract\\n    function addStablecoinSupport(address _treasury) external;\\n\\n    /// @notice Removes support for a stablecoin\\n    /// @param _treasury Treasury associated to the stablecoin to remove support for\\n    /// @dev This function can only be called by the `CoreBorrow` contract\\n    function removeStablecoinSupport(address _treasury) external;\\n\\n    /// @notice Sets a new core contract\\n    /// @param _core Core contract address to set\\n    /// @dev This function can only be called by the `CoreBorrow` contract\\n    function setCore(address _core) external;\\n}\\n\",\"keccak256\":\"0x39b0097f695b9e934bccdc72676c91513f1077cc5d0fd151908fd25a7c5cfbe4\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"./IAgToken.sol\\\";\\nimport \\\"./ICoreBorrow.sol\\\";\\nimport \\\"./IFlashAngle.sol\\\";\\n\\n/// @title ITreasury\\n/// @author Angle Labs, Inc.\\n/// @notice Interface for the `Treasury` contract\\n/// @dev This interface only contains functions of the `Treasury` which are called by other contracts\\n/// of this module\\ninterface ITreasury {\\n    /// @notice Stablecoin handled by this `treasury` contract\\n    function stablecoin() external view returns (IAgToken);\\n\\n    /// @notice Checks whether a given address has the  governor role\\n    /// @param admin Address to check\\n    /// @return Whether the address has the governor role\\n    /// @dev Access control is only kept in the `CoreBorrow` contract\\n    function isGovernor(address admin) external view returns (bool);\\n\\n    /// @notice Checks whether a given address has the guardian or the governor role\\n    /// @param admin Address to check\\n    /// @return Whether the address has the guardian or the governor role\\n    /// @dev Access control is only kept in the `CoreBorrow` contract which means that this function\\n    /// queries the `CoreBorrow` contract\\n    function isGovernorOrGuardian(address admin) external view returns (bool);\\n\\n    /// @notice Checks whether a given address has well been initialized in this contract\\n    /// as a `VaultManager`\\n    /// @param _vaultManager Address to check\\n    /// @return Whether the address has been initialized or not\\n    function isVaultManager(address _vaultManager) external view returns (bool);\\n\\n    /// @notice Sets a new flash loan module for this stablecoin\\n    /// @param _flashLoanModule Reference to the new flash loan module\\n    /// @dev This function removes the minting right to the old flash loan module and grants\\n    /// it to the new module\\n    function setFlashLoanModule(address _flashLoanModule) external;\\n\\n    /// @notice Gets the vault manager list\\n    function vaultManagerList(uint256 i) external returns (address);\\n}\\n\",\"keccak256\":\"0x06c2f781c08732ce1b5845c083af5742716245baa6c519bd737f32b230a884c1\",\"license\":\"GPL-3.0\"},\"contracts/mock/MockCoreBorrow.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"../interfaces/ICoreBorrow.sol\\\";\\nimport \\\"../interfaces/IFlashAngle.sol\\\";\\nimport \\\"../interfaces/ITreasury.sol\\\";\\n\\ncontract MockCoreBorrow is ICoreBorrow {\\n    mapping(address => bool) public flashLoaners;\\n    mapping(address => bool) public governors;\\n    mapping(address => bool) public guardians;\\n\\n    function isFlashLoanerTreasury(address treasury) external view override returns (bool) {\\n        return flashLoaners[treasury];\\n    }\\n\\n    function isGovernor(address admin) external view override returns (bool) {\\n        return governors[admin];\\n    }\\n\\n    function isGovernorOrGuardian(address admin) external view override returns (bool) {\\n        return governors[admin] || guardians[admin];\\n    }\\n\\n    function toggleGovernor(address admin) external {\\n        governors[admin] = !governors[admin];\\n    }\\n\\n    function toggleGuardian(address admin) external {\\n        guardians[admin] = !guardians[admin];\\n    }\\n\\n    function toggleFlashLoaners(address admin) external {\\n        flashLoaners[admin] = !flashLoaners[admin];\\n    }\\n\\n    function addStablecoinSupport(IFlashAngle flashAngle, address _treasury) external {\\n        flashAngle.addStablecoinSupport(_treasury);\\n    }\\n\\n    function removeStablecoinSupport(IFlashAngle flashAngle, address _treasury) external {\\n        flashAngle.removeStablecoinSupport(_treasury);\\n    }\\n\\n    function setCore(IFlashAngle flashAngle, address _core) external {\\n        flashAngle.setCore(_core);\\n    }\\n\\n    function setFlashLoanModule(ITreasury _treasury, address _flashLoanModule) external {\\n        _treasury.setFlashLoanModule(_flashLoanModule);\\n    }\\n}\\n\",\"keccak256\":\"0x95d2e0621dc4f12b3df1a4f65b7999c8987d186c6cb5cbba8720db94e95b0914\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506105f3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636166632d1161008c578063e42456c811610066578063e42456c814610273578063e43581b8146102d5578063f02dd8a21461030e578063fce53df61461034757600080fd5b80636166632d146101db57806366234daa1461023d578063e3eece261461025057600080fd5b80634bf15fab116100bd5780634bf15fab14610153578063521d4de9146101665780635480278b1461017957600080fd5b80630633b14a146100e45780632d3a1a051461011b5780633b529ddf1461013e575b600080fd5b6101076100f2366004610560565b60026020526000908152604090205460ff1681565b604051901515815260200160405180910390f35b610107610129366004610560565b60006020819052908152604090205460ff1681565b61015161014c366004610584565b61035a565b005b610151610161366004610584565b6103e0565b610107610174366004610560565b610434565b610151610187366004610560565b73ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00811660ff90911615179055565b6101516101e9366004610560565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00811660ff90911615179055565b61015161024b366004610584565b610493565b61010761025e366004610560565b60016020526000908152604090205460ff1681565b610151610281366004610560565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00811660ff90911615179055565b6101076102e3366004610560565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b61010761031c366004610560565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b610151610355366004610584565b6104e7565b6040517f543bd64700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015283169063543bd647906024015b600060405180830381600087803b1580156103c457600080fd5b505af11580156103d8573d6000803e3d6000fd5b505050505050565b6040517f8000963000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301528316906380009630906024016103aa565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604081205460ff168061048d575073ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205460ff165b92915050565b6040517f21c29f9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301528316906321c29f92906024016103aa565b6040517f442320c100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015283169063442320c1906024016103aa565b73ffffffffffffffffffffffffffffffffffffffff8116811461055d57600080fd5b50565b60006020828403121561057257600080fd5b813561057d8161053b565b9392505050565b6000806040838503121561059757600080fd5b82356105a28161053b565b915060208301356105b28161053b565b80915050925092905056fea2646970667358221220dab6e6955d5f195aea8e45d1f074fcf2253e81ae69e196d762ce06aa1b9cf72b64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80636166632d1161008c578063e42456c811610066578063e42456c814610273578063e43581b8146102d5578063f02dd8a21461030e578063fce53df61461034757600080fd5b80636166632d146101db57806366234daa1461023d578063e3eece261461025057600080fd5b80634bf15fab116100bd5780634bf15fab14610153578063521d4de9146101665780635480278b1461017957600080fd5b80630633b14a146100e45780632d3a1a051461011b5780633b529ddf1461013e575b600080fd5b6101076100f2366004610560565b60026020526000908152604090205460ff1681565b604051901515815260200160405180910390f35b610107610129366004610560565b60006020819052908152604090205460ff1681565b61015161014c366004610584565b61035a565b005b610151610161366004610584565b6103e0565b610107610174366004610560565b610434565b610151610187366004610560565b73ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00811660ff90911615179055565b6101516101e9366004610560565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00811660ff90911615179055565b61015161024b366004610584565b610493565b61010761025e366004610560565b60016020526000908152604090205460ff1681565b610151610281366004610560565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00811660ff90911615179055565b6101076102e3366004610560565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b61010761031c366004610560565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b610151610355366004610584565b6104e7565b6040517f543bd64700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015283169063543bd647906024015b600060405180830381600087803b1580156103c457600080fd5b505af11580156103d8573d6000803e3d6000fd5b505050505050565b6040517f8000963000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301528316906380009630906024016103aa565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604081205460ff168061048d575073ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205460ff165b92915050565b6040517f21c29f9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301528316906321c29f92906024016103aa565b6040517f442320c100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015283169063442320c1906024016103aa565b73ffffffffffffffffffffffffffffffffffffffff8116811461055d57600080fd5b50565b60006020828403121561057257600080fd5b813561057d8161053b565b9392505050565b6000806040838503121561059757600080fd5b82356105a28161053b565b915060208301356105b28161053b565b80915050925092905056fea2646970667358221220dab6e6955d5f195aea8e45d1f074fcf2253e81ae69e196d762ce06aa1b9cf72b64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isFlashLoanerTreasury(address)": {
        "params": {
          "treasury": "Address to check"
        },
        "returns": {
          "_0": "Whether the address has the `FLASHLOANER_TREASURY_ROLE` or not"
        }
      },
      "isGovernor(address)": {
        "params": {
          "admin": "Address to check"
        },
        "returns": {
          "_0": "Whether the address has the `GOVERNOR_ROLE` or not"
        }
      },
      "isGovernorOrGuardian(address)": {
        "details": "Governance should make sure when adding a governor to also give this governor the guardian role by calling the `addGovernor` function",
        "params": {
          "admin": "Address to check"
        },
        "returns": {
          "_0": "Whether the address has the `GUARDIAN_ROLE` or not"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isFlashLoanerTreasury(address)": {
        "notice": "Checks if an address corresponds to a treasury of a stablecoin with a flash loan module initialized on it"
      },
      "isGovernor(address)": {
        "notice": "Checks whether an address is governor of the Angle Protocol or not"
      },
      "isGovernorOrGuardian(address)": {
        "notice": "Checks whether an address is governor or a guardian of the Angle Protocol or not"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20523,
        "contract": "contracts/mock/MockCoreBorrow.sol:MockCoreBorrow",
        "label": "flashLoaners",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 20527,
        "contract": "contracts/mock/MockCoreBorrow.sol:MockCoreBorrow",
        "label": "governors",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 20531,
        "contract": "contracts/mock/MockCoreBorrow.sol:MockCoreBorrow",
        "label": "guardians",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}